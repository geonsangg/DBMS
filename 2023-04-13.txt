뷰 - 뷰는 하나 이상의 테이블이나 다른 뷰를 이용하여 생성되는 가상 테이블
데이터 사전에 뷰를 정의할 때 기술 한 쿼리문만 저장되고 실제 데이터는 저장되지 않음
뷰는 보안과 사용의 편의성을 위해 사용한다.
뷰 종류
1. 단순 뷰(simple view) - 하나의 기본 테이블로 생성된 뷰
  사용법 - CREATE 옵션 VIEW 뷰이름 (컬렴명, 컬럼명,,....) AS 서브쿼리 
 옵션, 별칭 - 사용해도 되고 생략해도 된다. 단, 기본테이블에 없는 컬럼은 반드시 별칭을 줘야함.
 OR REPLACE = 기존 뷰가 없으면 새롭게 만들어지고 기존 뷰가 있으면 덮어씌워서 만들어진다.
 FORCE = 기존 테이블이 없는 경우 뷰를 만들고 싶을 때 사용한다.
  예) create view v_emp_job (사번, 사원이름, 부서번호, 담당업무) as select eno, ename, dno, job from 
emp_second where job = 'SALESMAN';  = v_emp_job 뷰를 만든다. 컬럼명은 사번, 사원이름, 부서번호, 담당
업무로 - emp_second의 job이 SALESMAN인 것의 eno, enmae, dno, job으로
2. 복합 뷰(complex view) - 두 개 이상의 기본 테이블로 생성된 뷰
 사용법 - CREATE 옵션 VIEW 뷰이름 (컬렴명, 컬럼명,,....) AS 서브쿼리(조인으로 결합해서) 
  예) create view v_emp_complex as select * from emp_second natural join dept_second; 
WITH 옵션
with check option: 해당 뷰를 통해서 볼 수 있는 범위 내에서만 update, insert,delete가 가능하다.
 예) create view v_emp_job2 as select eno, ename, dno, job from emp_second where job = 'MANAGER' with 
check option; = job이 MANAGER가 아닌 것들은 insert, update가 불가능하다.
with read only: insert,update,delete는 불가능 하고 오직 select만 가능하게 한다.
  예) create view v_emp_job3 as select eno, ename, job, manager from emp_second where job = 
'SALESMAN' with read only;  = 오직 select만 가능하게 한다.

시퀀스 - 일련번호를 자동으로 생성하는 기능  // 생성후 주로 테이블에 pk에 접목을 많이 시킴
 사용법 - CREATE SEQUENCE 시퀸스이름 옵션,옵션,.....;   // 옵션은 써도 되고 안써도 됨
   옵션 - (옵션을 넣지 않으면 1부터 1씩 증가) 
  예) create sequence dno_seq; = 부서번호를 1부터 시작해서 1씩 증가하게 하는 시퀀스를 만듬
START WITH 시작숫자  
  예) create sequence dno_seq start with 10; = 10부터 시작하는 시퀀스
INCREMENT BY 증감숫자 
  예) create sequence dno_seq start with 10 increment by 10; = 10부터 시작해서 10씩 증가하는 시퀀스
MAXVALUE 최대값  , MINVALUE 최소값
CYCLE = 적으면 최대값까지 증감하면 최소값으로 다시 시작하며 순환함 단, pk일 경우 안됨
접목 방법 - insert할 때 values에 원하는 컬럼값 위치에 시퀀스이름.nextval 한다. (nextval = 알아서 증감)
  예) insert into dept_second values(dno_seq.nextval, 'RESEARCH','DALLAS');
currval = 현재 몇 번까지 만들어 졌는지 알수 있는 것 - select 시퀀시이름.currval from 테이블명;
  예) select dno_seq.currval from dept_second; = dept_second의 dno_seq가 몇 번까지 증감했는지
시퀀스 변경 - alter sequence 시퀀스이름 옵션 옵션값;
  예) alter sequence dno_seq maxvalue 100; = dno_seq의 최대값을 100으로 변경 
시퀀스 삭제 = drop sequence 시퀀스이름;

인덱스 - 조회의 성능을 향상시키는 기능  //무분별한 인덱스생성은 좋지 않다.
 사용법 - create index 인덱스이름 on 테이블이름(컬럼이름);
  예) create index idx_emp_ename on employee(ename); 
인덱스 삭제 = drop index 인덱스이름;
  인덱스를 사용해야하는 경우                  |    인덱스를 사용하지 말아야 하는 경우
 1. 테이블에 레코드가 많을 경우             .  |     테이블에 레코드가 적을 경우
 2. where문의 해당 컬럼이 많이 사용될 때      |     where문의 해당 컬럼이 거의 사용 안될 때
 3.검색 결과가 전체 데이터의 2%~4% 정도일 때 |   검색 결과가 전체 데이터의 10%~15% 정도일 때
                                              |     테이블에 DML작업이 많을 때 
                                                        (insert, update, delete)               
고유인덱스 - 컬럼내에 같은 값이 있으면 안된다. 
 사용법 - create unique index 인덱스이름 on 테이블이름(컬럼이름); 
결합인덱스 - 두 개이상의 컬럼으로 이루어진 인덱스
 사용법 - create index 인덱스이름 on 테이블이름(컬럼이름,컬럼이름,....);
함수기반인덱스 - 수식이나 함수를 적용하여 만든 인덱스
 사용법 - create index 인덱스이름 on 테이블이름(연산식);
  예) create index idx_emp_annsal on emp_second(salary*12);

동의어(synonym) : 다른 데이터베이스 객체에 대한 별칭   
 소유자로부터 접근 권한을 부여받은 다음 다른 사용자가 소유한 객체에 접근하기 위해서는 사용자명.객체
명과 같이 접근해야한다. 예) select * from system.sampletbl;
하지만 동의어를 이용하면 사용자명.객체명 대신 간단하게 별칭을 부여하여 기술할 수 있다.
전용 동의어 - 특정 사용자만 사용하는 동의어 
 사용법 - CREATE SYNONYM 별칭이름 FOR 사용자명.객체명; 
  예) create synonym ssam for system.sampletbl;  로 생성 후 select * from ssam; 사용
동의어 삭제 - drop synonym 별칭;
공용 동의어 - 모든 사용자가 사용 할 수 있는 동의어
 사용법 - CREATE PUBLIC SYNONYM 별칭이름 FOR 사용자명.객체명; 
  예) create public synonym plcssam for system.sampletbl;
