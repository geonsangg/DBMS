접속이 안될 때 
1. 제어판 -> 관리도구 -> 서비스 -> oracle~~~Listener, oracleserviceXE 둘다 실행되고 있어야함
2. 로컬디스크(c) -> app -> 자신의컴퓨터이름 -> product -> 버전(예 18.0.0) -> dbhomeXE -> network -> 
admin -> listner.ora를 메모장으로 열기 -> 내리다보면 HOST = 값 확인 -> 복붙

PL/SQL(Oracle's procedural Language extension to SQL) : 오라클에서 지원하는 프로그래밍 언어 기능
 1. 변수, 상수 등을 선언
 2. if문 사용하여 조건에 따라 분기
 3. Loop문을 이용하여 반복적 실행
 4. 커서(cursor)를 사용하여 여러 행을 검색

 (선언부) DECLARE ( 선언부도 옵션임)
 (실행부) BEGIN
      명령문~~~
        ~~~~~
    EXCEPTION (필요에 따라 예외처리)
 END;

한줄 주석 --    , 여러줄 주석 /* ~~~*/


 set SERVEROUTPUT on (처음키면 한번만 하면 된다.) - 프로그래밍 한걸 화면으로 보여줌


dbms_output.put_line() - 데이터베이스 스크림트 결과를 출력
	begin
	    dbms_output.put_line('오라클 프로그래밍 시작');
	end;
출력결과 : 오라클 프로그래밍 시작

숫자(number), 문자(varchar2), 날짜(date), boolean

변수에 넣는 명령어 :=  , 연결연산자 || 

	DECLARE
	    num NUMBER(4);
	BEGIN 
	    num := 50;
	    dbms_output.put_line('결과 =' || num);
	END;
출력결과 : 결과 =50


DECLARE
    name VARCHAR2(10) := '홍길동';
BEGIN
    dbms_output.put_line(name || '님 안녕하세요');
END;
출력결과 : 홍길동님 안녕하세요

변수 선언 3가지 :
    v_eno NUMBER(4);    = 직접 타입을 줌
    v_ename employee.ename%TYPE; = employee테이블의 ename컬럼과 같은 타입으로
    v_emp employee%rowtype;   = employee테이블의 행 전체를 일치시킴 
    즉, v_emp.eno 하면 eno의 타입으로,   v_emp.ename 하면 ename 타입으로

	DECLARE
	    v_eno NUMBER(4);
	    v_ename employee.ename%TYPE;
	BEGIN
	    v_eno := 7788;
	    v_ename := 'SCOTT';
	    dbms_output.put_line('사원번호   사원이름');
	    dbms_output.put_line('-----------------');
	    dbms_output.put_line(v_eno || '   ' || v_ename);
	END;
 출력결과 :  사원번호   사원이름
              -----------------
	       7788   SCOTT


select 컬럼이름,컬럼이름....into 변수,변수... from 테이블명 where 조건;

	DECLARE
	    v_eno employee.eno%TYPE;
	    v_ename employee.ename%TYPE;
	BEGIN
	    select eno, ename into v_eno, v_ename from employee where ename = 'SCOTT';
	    dbms_output.put_line('사원번호   사원이름');
	    dbms_output.put_line('-----------------');
	    dbms_output.put_line(v_eno || '   ' || v_ename);
	END;
  출력결과 :   사원번호   사원이름
	      -----------------
	      7788   SCOTT


IF 조건 THEN 명령문.....  END IF;   // 조건이 만족하면 명령문 수행
IF 조건 THEN 명령문... ELSIF 조건 THEN 명령문...  else 명령문.. . END IF;    // else 생략 가능

	DECLARE
	    v_employee employee%rowtype;
	    annsal number(7,2);
	BEGIN
	    select * into v_employee from employee where ename = 'MARTIN' ;
	    if(v_employee.commission is null) then 
	        v_employee.commission := 0;
	    end if;
	    annsal := v_employee.salary*12 + v_employee.commission;
	    dbms_output.put_line('사원번호  사원이름   연봉');
	    dbms_output.put_line('-----------------------');
	    dbms_output.put_line(v_employee.eno || '    '|| v_employee.ename ||'    ' || annsal);
	END;
  출력결과 :  사원번호  사원이름   연봉
	      -----------------------
	     7654    MARTIN    16400


반복문안에는 
LOOP 반복할내용... if 조건 exit end if; END LOOP;   // EXIT - 반복문 탈출하는 명령어

	DECLARE
		    dan number(1) := 4;
		    i number := 1; --크기를 안 주면 가변
		BEGIN
		    dbms_output.put_line('** '|| dan ||' **');
		    loop
		        dbms_output.put_line(dan || ' X ' || i || ' = ' || dan * i);
		        i:= i+1;
		        if(i = 10) then
		        exit;
		        end if;
		    end loop;
		END;

FOR 변수(선언문에서 선언한) IN 하한값..상한값 반복할내용... LOOP END LOOP;
  예) for I in 1..9 loop~~~  = 1부터 9까지 9번 수행후 빠져나옴
    for I in reverse 1..10 loop -> reverse 는 상한가부터 하한가로 시작

	DECLARE
	    dan number(1) := 5;
	    i number; --크기를 안 주면 가변
	BEGIN
	    dbms_output.put_line('** '|| dan ||' **');
	    for i in 1..9 loop
	        dbms_output.put_line(dan || ' X ' || i || ' = ' || dan * i);
	    end loop;
	END;	

WHILE (조건) LOOP 반복할내용... END LOOP; // 조건이 만족하면 돌고 불만족시 빠져나옴

	DECLARE
	    dan number(1) := 7;
	    i number := 1;
	BEGIN
	    dbms_output.put_line('** '|| dan ||' **');
	    while(i < 10) loop
	        dbms_output.put_line(dan || ' X ' || i || ' = ' || dan * i);
	        i := i+1;
	    end loop;
	END;


커서 : select 문의 수행결과가 여러 개의 행으로  구해지는 경우 모든 행에 대해 처리를 하려면 커서를 사용
해야한다. 
1단계 : 커서 선언 - CURSOR 커서이름 IS 수행할SELECT문
2단계 : 커서 오픈 - OPEN 커서이름
3단계 : 커서 사용 - FETCH 커서이름 INTO 변수..... 
4단계 : 커서 종료 - CLOSE 커서이름 
   
	DECLARE
	    v_dept department%rowtype;
	    cursor cur1 is select * from department;   // 커서가 행들을 받음
	BEGIN
	    dbms_output.put_line('부서번호  부서명  지역명');
	    dbms_output.put_line('---------------------');
	    open cur1;
	    loop 
	        fetch cur1 into v_dept.dno, v_dept.dname, v_dept.loc;  //행들을 하나씩 대입
	        exit when cur1%notfound;     --notfound = 더이상 찾지 못할때;
	        dbms_output.put_line(v_dept.dno || '   ' || v_dept.dname || '   ' || v_dept.loc);
	    end loop;
	    close cur1;
	END;

하지만 for문을 사용하면 1단계만 해도 가능하다.
FOR 행변수 IN 커서이름 LOOP  명령문.... END LOOP;
	DECLARE
	    v_dept department%rowtype;
	    cursor cur1 is select * from department; 
	BEGIN
	    dbms_output.put_line('부서번호  부서명  지역명');
	    dbms_output.put_line('---------------------');
	    for v_dept in cur1 loop
	        dbms_output.put_line(v_dept.dno || '   ' || v_dept.dname || '   ' || v_dept.loc);
	    end loop;
	END;
	